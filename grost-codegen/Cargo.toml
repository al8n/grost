[package]
name = "grost-codegen"
version = "0.1.0"
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
readme.workspace = true
rust-version.workspace = true
categories.workspace = true
metadata.workspace = true

[features]
default = ["std"]
# generate code for std environment
std = []
# generate code for alloc environment
alloc = []

# support types from `arbitrary-int = "1"`
arbitrary-int_1 = []
# support types from `bnum = "0.13"`
bnum_0_13 = []
# support types from `ruint = "1"`
ruint_1 = []


# generate quichcheck implementations and quickcheck unit tests
quickcheck = []
# generate code for the `arbitrary` crate
arbitrary = []




[dependencies]
cfg-if = "1"
derive_more = { version = "2", features = ["unwrap", "from", "display", "is_variant"] }
either = "1"
heck = "0.5"
indexmap = "2"
proc-macro2 = "1"
prettyplease = { version = "0.2" }
paste = "1"
smol_str = "0.3"
syn = { version = "2", features = ["full"] }
thiserror = "2"
anyhow = "1"
quote = "1"
varing.workspace = true